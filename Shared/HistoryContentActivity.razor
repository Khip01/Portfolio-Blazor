<style>

    /* Container Content Base */
    .container-content {
        height: 70px;
        transition: height .3s ease-out 100ms;
    }

        .container-content.active {
            height: 350px;
        }

    /* Content Activity */
    .container-activity {
        height: 70px;
        transition: height .3s ease-out 100ms;
    }

        .container-activity.active {
            height: 350px;
        }

        /* Content Header */
        .container-activity .container-header {
            height: 70px;
            transition: height .3s ease-out 100ms;
        }

        .container-activity.active .container-header {
            height: 102px;
        }

        /* Content Parent */
        .container-activity .container-parent {
            overflow: hidden;
        }

    .container-parent.active .container-parent {
        overflow: auto;
    }

    /* Content Body */
    .container-activity .container-body {
        height: 0px;
    }

    .container-activity.active .container-body {
        height: 248px;
    }

    /* Button */
    .button-content {
        background-color: yellowgreen;
        color: white;
        height: 100%;
        transition: background-color .3s ease-out 100ms;
    }

        .button-content:hover {
            background-color: limegreen;
        }

        .button-content.active {
            background-color: red;
        }
</style>


@* Content *@
<MudPaper Elevation="4" Class=@ContainerContent>
    <MudContainer Class=@ClassContainerActivity>

        @* Container Content *@
        <MudContainer Class="pa-0 container-parent" Style="height:100%">
            @* Header *@
            <MudContainer Class="d-flex align-center flex-grow-1 pa-4 container-header">
                <MudImage ObjectFit="ObjectFit.Contain" Src=@ContentImageSrc Alt="Logo" Elevation="0" Style="height:100%;" />
                <MudPaper Height="100%" Width="100%" Elevation="0" Class="d-flex flex-column justify-center flex-grow-1 pa-6">
                    <div class="text-black heading2" style="height: 30px; font-size:20px">
                        @ContentTitle
                    </div>
                </MudPaper>
            </MudContainer>

            @* Body *@
            <MudContainer Class="container-body">
                <div class="text-dark-gray body-text-small" style="height: auto;">
                    @ContentPeriod
                </div>
                <div class="text-black body-text" style="height: auto;">
                    @ContentDesc
                </div>
                <div class="text-black heading2" style="height: auto; font-size:15px">
                    What I hold:
                </div>
                <div style="height: auto;" class="d-flex flex-row">
                    @if (@IsAndroid == "y")
                    {
                        <MudIcon Icon="@Icons.Material.Filled.Android" Style="font-size: 4rem; color:lawngreen" Class="ma-4"></MudIcon>
                    }
                    @if (@IsDesktop == "y")
                    {
                        <MudIcon Icon="@Icons.Material.Filled.DesktopWindows" Style="font-size: 4rem;" Class="ma-4"></MudIcon>
                    }
                </div>
            </MudContainer>
        </MudContainer>

        @* Container Button *@
        <MudContainer Class="pa-0" Style="height:100%; width:70px">
            @* Button *@
            <MudPaper Elevation="0" Height="100%">
                <MudButton Variant="Variant.Filled" Class=@ClassButton OnClick="ShowMore">
                    <MudIcon Icon=@IconButton Title="Recent" Size="Size.Large" />
                </MudButton>
            </MudPaper>
        </MudContainer>

    </MudContainer>
</MudPaper>


@code {
    // Param
    [Parameter]
    public string ContentImageSrc { get; set; }
    
    [Parameter]
    public string ContentTitle { get; set; }
    
    [Parameter]
    public string ContentPeriod { get; set; }

    [Parameter]
    public string ContentDesc { get; set; }

    [Parameter]
    public string IsAndroid { get; set; }
    
    [Parameter]
    public string IsDesktop { get; set; }



    // Show More Activity
    private string ContainerContent = "mb-8 mx-8 container-content";
    private string ClassContainerActivity = "d-flex flex-row pa-0 container-activity";
    private string IconButton = @Icons.Material.Filled.UnfoldMore;
    private string ClassButton = "button-content";

    public bool _isMore = false;

    public void ShowMore()
    {
        if (!_isMore)
        {
            _isMore = !_isMore;

            // Container Content
            ContainerContent = "mb-8 mx-8 container-content active";

            // For Content Activity height
            ClassContainerActivity = "d-flex flex-row pa-0 container-activity active";

            // For Button Style
            IconButton = @Icons.Material.Filled.UnfoldLess;
            ClassButton = "button-content active";
        }
        else
        {
            _isMore = !_isMore;

            // Container Content
            ContainerContent = "mb-8 mx-8 container-content";

            // For Content Height
            ClassContainerActivity = "d-flex flex-row pa-0 container-activity";

            // For Button Style
            IconButton = @Icons.Material.Filled.UnfoldMore;
            ClassButton = "button-content";
        }
    }
}
